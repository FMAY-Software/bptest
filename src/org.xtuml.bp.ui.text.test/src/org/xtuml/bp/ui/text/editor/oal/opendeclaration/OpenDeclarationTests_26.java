//=====================================================================
//
// WARNING:      Do not edit this generated file
// Generated by: UnitTestGenerator.pl
// Version:      1.15
// Matrix:       9761_9762_find_declarations_matrix.txt
//
//=====================================================================

package org.xtuml.bp.ui.text.editor.oal.opendeclaration;

import org.eclipse.ui.IEditorPart;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import org.xtuml.bp.core.*;
import org.xtuml.bp.core.common.NonRootModelElement;
import org.xtuml.bp.test.common.*;
import org.xtuml.bp.ui.canvas.*;
import org.xtuml.bp.ui.graphics.editor.*;
import org.xtuml.bp.ui.canvas.test.*;

public class OpenDeclarationTests_26 extends OpenDeclarationTests {

    protected String getResultName() {
        return super.getResultName();
    }

    public OpenDeclarationTests_26() {
        super("OpenDeclarationTests_26", null);
    }

    @Before
    public void setUp() throws Exception {
        super.setUp();
    }

    @After
    public void tearDown() throws Exception {
        super.tearDown();
    }


    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testL11T09_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P02M02C01", "1");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testL11T09_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P02M02C01", "2");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testL11T09_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P02M02C01", "3");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testL11T09_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P02M02C01", "4");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testL11T09_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P02M02C01", "5");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testL11T09_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P03M02C01", "6");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testL11T09_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P03M02C01", "7");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testL11T09_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P03M02C01", "8");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testL11T09_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P03M02C01", "9");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testL11T09_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P03M02C01", "10");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testL11T09_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P01M01C02", "11");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testL11T09_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P01M01C02", "12");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testL11T09_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P01M01C02", "13");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testL11T09_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P01M01C02", "14");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testL11T09_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P01M01C02", "15");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testL11T09_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P02M01C02", "16");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testL11T09_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P02M01C02", "17");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testL11T09_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P02M01C02", "18");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testL11T09_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P02M01C02", "19");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testL11T09_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P02M01C02", "20");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testL11T09_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P03M01C02", "21");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testL11T09_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P03M01C02", "22");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testL11T09_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P03M01C02", "23");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testL11T09_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P03M01C02", "24");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testL11T09_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P03M01C02", "25");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testL11T09_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P01M02C02", "26");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testL11T09_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P01M02C02", "27");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testL11T09_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P01M02C02", "28");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testL11T09_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P01M02C02", "29");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testL11T09_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P01M02C02", "30");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testL11T09_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P02M02C02", "31");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testL11T09_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P02M02C02", "32");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testL11T09_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P02M02C02", "33");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testL11T09_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P02M02C02", "34");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testL11T09_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P02M02C02", "35");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testL11T09_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P03M02C02", "36");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testL11T09_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P03M02C02", "37");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testL11T09_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P03M02C02", "38");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testL11T09_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P03M02C02", "39");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testL11T09_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P03M02C02", "40");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testL11T10_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P01M01C01", "41");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testL11T10_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P01M01C01", "42");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testL11T10_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P01M01C01", "43");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testL11T10_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P01M01C01", "44");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testL11T10_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P01M01C01", "45");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testL11T10_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P02M01C01", "46");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testL11T10_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P02M01C01", "47");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testL11T10_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P02M01C01", "48");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testL11T10_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P02M01C01", "49");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testL11T10_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P02M01C01", "50");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testL11T10_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P03M01C01", "51");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testL11T10_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P03M01C01", "52");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testL11T10_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P03M01C01", "53");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testL11T10_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P03M01C01", "54");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testL11T10_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P03M01C01", "55");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testL11T10_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P01M02C01", "56");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testL11T10_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P01M02C01", "57");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testL11T10_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P01M02C01", "58");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testL11T10_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P01M02C01", "59");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testL11T10_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P01M02C01", "60");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testL11T10_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P02M02C01", "61");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testL11T10_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P02M02C01", "62");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testL11T10_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P02M02C01", "63");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testL11T10_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P02M02C01", "64");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testL11T10_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P02M02C01", "65");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testL11T10_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P03M02C01", "66");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testL11T10_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P03M02C01", "67");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testL11T10_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P03M02C01", "68");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testL11T10_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P03M02C01", "69");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testL11T10_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P03M02C01", "70");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testL11T10_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P01M01C02", "71");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testL11T10_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P01M01C02", "72");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testL11T10_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P01M01C02", "73");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testL11T10_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P01M01C02", "74");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testL11T10_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P01M01C02", "75");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testL11T10_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P02M01C02", "76");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testL11T10_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P02M01C02", "77");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testL11T10_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P02M01C02", "78");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testL11T10_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P02M01C02", "79");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testL11T10_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P02M01C02", "80");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testL11T10_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P03M01C02", "81");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testL11T10_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P03M01C02", "82");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testL11T10_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P03M01C02", "83");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testL11T10_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P03M01C02", "84");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testL11T10_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P03M01C02", "85");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testL11T10_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P01M02C02", "86");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testL11T10_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P01M02C02", "87");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testL11T10_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P01M02C02", "88");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testL11T10_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P01M02C02", "89");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testL11T10_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P01M02C02", "90");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testL11T10_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P02M02C02", "91");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testL11T10_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P02M02C02", "92");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testL11T10_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P02M02C02", "93");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testL11T10_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P02M02C02", "94");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testL11T10_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P02M02C02", "95");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testL11T10_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E01P03M02C02", "96");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testL11T10_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E02P03M02C02", "97");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testL11T10_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E03P03M02C02", "98");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testL11T10_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E04P03M02C02", "99");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T10) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testL11T10_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T10", "E05P03M02C02", "100");

        NonRootModelElement src = selectLT("L11T10");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

}

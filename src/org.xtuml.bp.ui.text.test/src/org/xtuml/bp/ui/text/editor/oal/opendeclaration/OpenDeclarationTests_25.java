//=====================================================================
//
// WARNING:      Do not edit this generated file
// Generated by: UnitTestGenerator.pl
// Version:      1.15
// Matrix:       9761_9762_find_declarations_matrix.txt
//
//=====================================================================

package org.xtuml.bp.ui.text.editor.oal.opendeclaration;

import org.eclipse.ui.IEditorPart;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import org.xtuml.bp.core.*;
import org.xtuml.bp.core.common.NonRootModelElement;
import org.xtuml.bp.test.common.*;
import org.xtuml.bp.ui.canvas.*;
import org.xtuml.bp.ui.graphics.editor.*;
import org.xtuml.bp.ui.canvas.test.*;

public class OpenDeclarationTests_25 extends OpenDeclarationTests {

    protected String getResultName() {
        return super.getResultName();
    }

    public OpenDeclarationTests_25() {
        super("OpenDeclarationTests_25", null);
    }

    @Before
    public void setUp() throws Exception {
        super.setUp();
    }

    @After
    public void tearDown() throws Exception {
        super.tearDown();
    }


    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testL11T05_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P03M01C01", "1");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testL11T05_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P03M01C01", "2");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testL11T05_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P03M01C01", "3");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testL11T05_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P03M01C01", "4");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testL11T05_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P03M01C01", "5");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testL11T05_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P01M02C01", "6");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testL11T05_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P01M02C01", "7");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testL11T05_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P01M02C01", "8");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testL11T05_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P01M02C01", "9");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testL11T05_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P01M02C01", "10");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testL11T05_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P02M02C01", "11");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testL11T05_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P02M02C01", "12");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testL11T05_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P02M02C01", "13");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testL11T05_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P02M02C01", "14");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testL11T05_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P02M02C01", "15");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testL11T05_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P03M02C01", "16");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testL11T05_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P03M02C01", "17");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testL11T05_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P03M02C01", "18");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testL11T05_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P03M02C01", "19");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testL11T05_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P03M02C01", "20");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testL11T05_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P01M01C02", "21");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testL11T05_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P01M01C02", "22");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testL11T05_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P01M01C02", "23");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testL11T05_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P01M01C02", "24");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testL11T05_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P01M01C02", "25");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testL11T05_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P02M01C02", "26");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testL11T05_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P02M01C02", "27");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testL11T05_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P02M01C02", "28");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testL11T05_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P02M01C02", "29");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testL11T05_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P02M01C02", "30");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testL11T05_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P03M01C02", "31");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testL11T05_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P03M01C02", "32");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testL11T05_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P03M01C02", "33");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testL11T05_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P03M01C02", "34");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testL11T05_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P03M01C02", "35");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testL11T05_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P01M02C02", "36");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testL11T05_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P01M02C02", "37");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testL11T05_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P01M02C02", "38");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testL11T05_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P01M02C02", "39");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testL11T05_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P01M02C02", "40");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testL11T05_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P02M02C02", "41");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testL11T05_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P02M02C02", "42");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testL11T05_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P02M02C02", "43");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testL11T05_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P02M02C02", "44");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testL11T05_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P02M02C02", "45");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testL11T05_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E01P03M02C02", "46");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testL11T05_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E02P03M02C02", "47");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testL11T05_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E03P03M02C02", "48");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testL11T05_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E04P03M02C02", "49");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T05) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testL11T05_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T05", "E05P03M02C02", "50");

        NonRootModelElement src = selectLT("L11T05");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testL11T06_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P01M01C01", "51");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testL11T06_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P01M01C01", "52");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testL11T06_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P01M01C01", "53");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testL11T06_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P01M01C01", "54");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testL11T06_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P01M01C01", "55");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testL11T06_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P02M01C01", "56");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testL11T06_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P02M01C01", "57");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testL11T06_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P02M01C01", "58");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testL11T06_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P02M01C01", "59");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testL11T06_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P02M01C01", "60");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testL11T06_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P03M01C01", "61");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testL11T06_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P03M01C01", "62");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testL11T06_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P03M01C01", "63");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testL11T06_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P03M01C01", "64");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testL11T06_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P03M01C01", "65");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testL11T06_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P01M02C01", "66");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testL11T06_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P01M02C01", "67");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testL11T06_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P01M02C01", "68");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testL11T06_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P01M02C01", "69");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testL11T06_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P01M02C01", "70");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testL11T06_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P02M02C01", "71");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testL11T06_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P02M02C01", "72");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testL11T06_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P02M02C01", "73");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testL11T06_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P02M02C01", "74");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testL11T06_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P02M02C01", "75");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testL11T06_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P03M02C01", "76");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testL11T06_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P03M02C01", "77");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testL11T06_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P03M02C01", "78");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testL11T06_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P03M02C01", "79");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testL11T06_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P03M02C01", "80");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testL11T06_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P01M01C02", "81");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testL11T06_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P01M01C02", "82");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testL11T06_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P01M01C02", "83");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testL11T06_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P01M01C02", "84");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testL11T06_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P01M01C02", "85");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testL11T06_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P02M01C02", "86");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testL11T06_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P02M01C02", "87");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testL11T06_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P02M01C02", "88");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testL11T06_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P02M01C02", "89");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testL11T06_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P02M01C02", "90");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testL11T06_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P03M01C02", "91");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testL11T06_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P03M01C02", "92");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testL11T06_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P03M01C02", "93");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testL11T06_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P03M01C02", "94");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testL11T06_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P03M01C02", "95");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testL11T06_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P01M02C02", "96");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testL11T06_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P01M02C02", "97");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testL11T06_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P01M02C02", "98");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testL11T06_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P01M02C02", "99");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testL11T06_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P01M02C02", "100");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testL11T06_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P02M02C02", "101");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testL11T06_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P02M02C02", "102");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testL11T06_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P02M02C02", "103");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testL11T06_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P02M02C02", "104");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testL11T06_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P02M02C02", "105");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testL11T06_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E01P03M02C02", "106");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testL11T06_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E02P03M02C02", "107");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testL11T06_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E03P03M02C02", "108");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testL11T06_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E04P03M02C02", "109");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T06) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testL11T06_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T06", "E05P03M02C02", "110");

        NonRootModelElement src = selectLT("L11T06");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testL11T07_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P01M01C01", "111");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testL11T07_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P01M01C01", "112");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testL11T07_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P01M01C01", "113");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testL11T07_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P01M01C01", "114");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testL11T07_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P01M01C01", "115");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testL11T07_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P02M01C01", "116");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testL11T07_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P02M01C01", "117");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testL11T07_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P02M01C01", "118");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testL11T07_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P02M01C01", "119");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testL11T07_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P02M01C01", "120");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testL11T07_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P03M01C01", "121");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testL11T07_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P03M01C01", "122");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testL11T07_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P03M01C01", "123");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testL11T07_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P03M01C01", "124");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testL11T07_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P03M01C01", "125");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testL11T07_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P01M02C01", "126");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testL11T07_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P01M02C01", "127");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testL11T07_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P01M02C01", "128");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testL11T07_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P01M02C01", "129");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testL11T07_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P01M02C01", "130");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testL11T07_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P02M02C01", "131");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testL11T07_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P02M02C01", "132");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testL11T07_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P02M02C01", "133");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testL11T07_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P02M02C01", "134");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testL11T07_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P02M02C01", "135");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testL11T07_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P03M02C01", "136");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testL11T07_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P03M02C01", "137");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testL11T07_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P03M02C01", "138");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testL11T07_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P03M02C01", "139");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testL11T07_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P03M02C01", "140");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testL11T07_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P01M01C02", "141");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testL11T07_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P01M01C02", "142");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testL11T07_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P01M01C02", "143");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testL11T07_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P01M01C02", "144");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testL11T07_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P01M01C02", "145");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testL11T07_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P02M01C02", "146");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testL11T07_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P02M01C02", "147");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testL11T07_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P02M01C02", "148");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testL11T07_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P02M01C02", "149");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testL11T07_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P02M01C02", "150");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testL11T07_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P03M01C02", "151");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testL11T07_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P03M01C02", "152");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testL11T07_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P03M01C02", "153");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testL11T07_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P03M01C02", "154");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testL11T07_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P03M01C02", "155");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testL11T07_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P01M02C02", "156");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testL11T07_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P01M02C02", "157");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testL11T07_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P01M02C02", "158");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testL11T07_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P01M02C02", "159");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testL11T07_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P01M02C02", "160");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testL11T07_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P02M02C02", "161");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testL11T07_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P02M02C02", "162");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testL11T07_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P02M02C02", "163");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testL11T07_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P02M02C02", "164");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testL11T07_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P02M02C02", "165");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testL11T07_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E01P03M02C02", "166");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testL11T07_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E02P03M02C02", "167");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testL11T07_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E03P03M02C02", "168");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testL11T07_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E04P03M02C02", "169");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T07) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testL11T07_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T07", "E05P03M02C02", "170");

        NonRootModelElement src = selectLT("L11T07");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testL11T08_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P01M01C01", "171");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testL11T08_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P01M01C01", "172");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testL11T08_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P01M01C01", "173");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testL11T08_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P01M01C01", "174");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testL11T08_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P01M01C01", "175");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testL11T08_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P02M01C01", "176");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testL11T08_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P02M01C01", "177");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testL11T08_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P02M01C01", "178");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testL11T08_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P02M01C01", "179");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testL11T08_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P02M01C01", "180");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testL11T08_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P03M01C01", "181");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testL11T08_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P03M01C01", "182");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testL11T08_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P03M01C01", "183");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testL11T08_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P03M01C01", "184");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testL11T08_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P03M01C01", "185");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testL11T08_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P01M02C01", "186");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testL11T08_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P01M02C01", "187");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testL11T08_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P01M02C01", "188");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testL11T08_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P01M02C01", "189");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testL11T08_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P01M02C01", "190");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testL11T08_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P02M02C01", "191");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testL11T08_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P02M02C01", "192");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testL11T08_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P02M02C01", "193");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testL11T08_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P02M02C01", "194");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testL11T08_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P02M02C01", "195");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testL11T08_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P03M02C01", "196");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testL11T08_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P03M02C01", "197");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testL11T08_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P03M02C01", "198");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testL11T08_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P03M02C01", "199");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testL11T08_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P03M02C01", "200");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testL11T08_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P01M01C02", "201");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testL11T08_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P01M01C02", "202");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testL11T08_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P01M01C02", "203");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testL11T08_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P01M01C02", "204");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testL11T08_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P01M01C02", "205");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testL11T08_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P02M01C02", "206");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testL11T08_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P02M01C02", "207");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testL11T08_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P02M01C02", "208");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testL11T08_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P02M01C02", "209");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testL11T08_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P02M01C02", "210");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testL11T08_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P03M01C02", "211");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testL11T08_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P03M01C02", "212");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testL11T08_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P03M01C02", "213");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testL11T08_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P03M01C02", "214");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testL11T08_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P03M01C02", "215");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testL11T08_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P01M02C02", "216");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testL11T08_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P01M02C02", "217");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testL11T08_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P01M02C02", "218");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testL11T08_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P01M02C02", "219");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testL11T08_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P01M02C02", "220");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testL11T08_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P02M02C02", "221");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testL11T08_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P02M02C02", "222");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testL11T08_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P02M02C02", "223");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testL11T08_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P02M02C02", "224");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testL11T08_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P02M02C02", "225");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testL11T08_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E01P03M02C02", "226");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testL11T08_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E02P03M02C02", "227");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testL11T08_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E03P03M02C02", "228");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testL11T08_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E04P03M02C02", "229");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T08) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testL11T08_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("L11T08", "E05P03M02C02", "230");

        NonRootModelElement src = selectLT("L11T08");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testL11T09_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P01M01C01", "231");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testL11T09_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P01M01C01", "232");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testL11T09_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P01M01C01", "233");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testL11T09_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P01M01C01", "234");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testL11T09_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P01M01C01", "235");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testL11T09_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P02M01C01", "236");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testL11T09_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P02M01C01", "237");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testL11T09_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P02M01C01", "238");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testL11T09_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P02M01C01", "239");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testL11T09_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P02M01C01", "240");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testL11T09_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P03M01C01", "241");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testL11T09_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P03M01C01", "242");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testL11T09_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P03M01C01", "243");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testL11T09_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P03M01C01", "244");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testL11T09_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P03M01C01", "245");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testL11T09_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E01P01M02C01", "246");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testL11T09_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E02P01M02C01", "247");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testL11T09_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E03P01M02C01", "248");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testL11T09_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E04P01M02C01", "249");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (L11T09) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testL11T09_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("L11T09", "E05P01M02C01", "250");

        NonRootModelElement src = selectLT("L11T09");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        LT_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

}

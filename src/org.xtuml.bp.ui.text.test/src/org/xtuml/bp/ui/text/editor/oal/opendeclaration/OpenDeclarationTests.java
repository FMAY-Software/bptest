//=====================================================================
//
// NOTE: This file was generated, but is maintained by hand.
// Generated by: UnitTestGenerator.pl
// Version:      1.15
// Matrix:       9761_9762_find_declarations_matrix.txt
//
//=====================================================================

package org.xtuml.bp.ui.text.editor.oal.opendeclaration;

import org.eclipse.ui.IEditorPart;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import org.xtuml.bp.core.*;
import org.xtuml.bp.core.common.NonRootModelElement;
import org.xtuml.bp.test.common.*;
import org.xtuml.bp.ui.canvas.*;
import org.xtuml.bp.ui.graphics.editor.*;
import org.xtuml.bp.ui.canvas.test.*;

public class OpenDeclarationTests extends CanvasTest {
    public static boolean generateResults = false;
    public static boolean useDrawResults = true;

    String test_id = "";

    protected String getResultName() {
        return getClass().getSimpleName() + "_" + test_id;
    }

    protected GraphicalEditor fActiveEditor;

    protected GraphicalEditor getActiveEditor() {
        return fActiveEditor;
    }

    public OpenDeclarationTests(String subTypeClassName, String subTypeArg0) {
        super(subTypeClassName, subTypeArg0);
    }

    protected String getTestId(String src, String dest, String count) {
        return "test_" + count;
    }

    @Before
    public void setUp() throws Exception {
        super.setUp();
    }

    @After
    public void tearDown() throws Exception {
        super.tearDown();
    }

    /**
     * "TL" is one of the degrees of freedom as specified in this issues
     * test matrix.
     * This routine gets the "TL" instance from the given name.
     * 
     * @param element The degree of freedom instance to retrieve
     * @return A model element used in the test as specified by the test matrix
     */
    NonRootModelElement selectTL(String element) {
        return selectTL(element, null);
    }

    /**
     * "TL" is one of the degrees of freedom as specified in this issues
     * test matrix.
     * This routine gets the "TL" instance from the given name.
     * 
     * @param element The degree of freedom instance to retrieve
     * @param extraData Extra data needed for selection
     * @return A model element used in the test as specified by the test matrix
     */
    NonRootModelElement selectTL(String element, Object extraData) {
        NonRootModelElement nrme = null;
        if (element.equalsIgnoreCase("T01L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T01L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T02L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T03L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T04L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T05L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T06L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T07L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T08L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T09L11")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L03")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L04")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L05")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L06")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L07")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L08")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L09")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L10")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("T10L11")) {
            //TODO: Implement
        } 
        assertTrue("An instance with degree of freedom type \"TL\" was not found.  Instance Name: " + element + ".", nrme!=null);
        return nrme;
    }

    /**
     * "EPMC" is one of the degrees of freedom as specified in this issues
     * test matrix.
     * This routine gets the "EPMC" instance from the given name.
     * 
     * @param element The degree of freedom instance to retrieve
     * @return A model element used in the test as specified by the test matrix
     */
    NonRootModelElement selectEPMC(String element) {
        return selectEPMC(element, null);
    }

    /**
     * "EPMC" is one of the degrees of freedom as specified in this issues
     * test matrix.
     * This routine gets the "EPMC" instance from the given name.
     * 
     * @param element The degree of freedom instance to retrieve
     * @param extraData Extra data needed for selection
     * @return A model element used in the test as specified by the test matrix
     */
    NonRootModelElement selectEPMC(String element, Object extraData) {
        NonRootModelElement nrme = null;
        if (element.equalsIgnoreCase("E01P01M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P01M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P01M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P01M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P02M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P02M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P02M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P02M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P03M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P03M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P03M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E01P03M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P01M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P01M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P01M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P01M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P02M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P02M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P02M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P02M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P03M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P03M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P03M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E02P03M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P01M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P01M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P01M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P01M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P02M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P02M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P02M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P02M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P03M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P03M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P03M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E03P03M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P01M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P01M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P01M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P01M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P02M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P02M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P02M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P02M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P03M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P03M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P03M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E04P03M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P01M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P01M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P01M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P01M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P02M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P02M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P02M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P02M02C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P03M01C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P03M01C02")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P03M02C01")) {
            //TODO: Implement
        } else if (element.equalsIgnoreCase("E05P03M02C02")) {
            //TODO: Implement
        } else        assertTrue("An instance with degree of freedom type \"EPMC\" was not found.  Instance Name: " + element + ".", nrme!=null);
        return nrme;
    }

    /**
     * This routine performs the action associated with a matrix cell.
     * The parameters represent model instances aquired based on the specifed
     * column instance and row instance.
     * 
     * @param columnInstance Model instance from the column
     * @param rowInstance Model instance from the row
     */
    void TL_EPMC_Action(NonRootModelElement columnInstance, NonRootModelElement rowInstance) {
        //TODO: Implement
    }

    /**
    * This function verifies an expected result.
    *
    * @param source A model element instance aquired through a action taken
    *               on a column of the matrix.
    * @param destination A model element instance aquired through a action taken
    *                    taken on a row of the matrix.
    * @return true if the test succeeds, false if it fails
    */
    boolean checkResult_elementShownInMEandCanvas(NonRootModelElement source, NonRootModelElement destination) {
        boolean elementShownInMEandCanvas = false;
        //TODO: Implement
        return elementShownInMEandCanvas;
    }


    /**
    * This function verifies an expected result.
    *
    * @param source A model element instance aquired through a action taken
    *               on a column of the matrix.
    * @param destination A model element instance aquired through a action taken
    *                    taken on a row of the matrix.
    * @return true if the test succeeds, false if it fails
    */
    boolean checkResult_invalidSelection(NonRootModelElement source, NonRootModelElement destination) {
        boolean invalidSelection = false;
        //TODO: Implement
        return invalidSelection;
    }


    /**
    * This function verifies an expected result.
    *
    * @param source A model element instance aquired through a action taken
    *               on a column of the matrix.
    * @param destination A model element instance aquired through a action taken
    *                    taken on a row of the matrix.
    * @return true if the test succeeds, false if it fails
    */
    boolean checkResult_elementShownInMENotCanvas(NonRootModelElement source, NonRootModelElement destination) {
        boolean elementShownInMENotCanvas = false;
        //TODO: Implement
        return elementShownInMENotCanvas;
    }


    /**
    * This function verifies an expected result.
    *
    * @param source A model element instance aquired through a action taken
    *               on a column of the matrix.
    * @param destination A model element instance aquired through a action taken
    *                    taken on a row of the matrix.
    * @return true if the test succeeds, false if it fails
    */
    boolean checkResult_transientDeclarationShown(NonRootModelElement source, NonRootModelElement destination) {
        boolean transientDeclarationShown = false;
        //TODO: Implement
        return transientDeclarationShown;
    }


    /**
    * This function verifies an expected result.
    *
    * @param source A model element instance aquired through a action taken
    *               on a column of the matrix.
    * @param destination A model element instance aquired through a action taken
    *                    taken on a row of the matrix.
    * @return true if the test succeeds, false if it fails
    */
    boolean checkResult_elementShownInCanvasNotME(NonRootModelElement source, NonRootModelElement destination) {
        boolean elementShownInCanvasNotME = false;
        //TODO: Implement
        return elementShownInCanvasNotME;
    }


}

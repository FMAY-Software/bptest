//=====================================================================
//
// WARNING:      Do not edit this generated file
// Generated by: UnitTestGenerator.pl
// Version:      1.15
// Matrix:       9761_9762_find_declarations_matrix.txt
//
//=====================================================================

package org.xtuml.bp.ui.text.editor.oal.opendeclaration;

import org.eclipse.ui.IEditorPart;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import org.xtuml.bp.core.*;
import org.xtuml.bp.core.common.NonRootModelElement;
import org.xtuml.bp.test.common.*;
import org.xtuml.bp.ui.canvas.*;
import org.xtuml.bp.ui.graphics.editor.*;
import org.xtuml.bp.ui.canvas.test.*;

public class OpenDeclarationTests_16 extends OpenDeclarationTests {

    protected String getResultName() {
        return super.getResultName();
    }

    public OpenDeclarationTests_16() {
        super("OpenDeclarationTests_16", null);
    }

    @Before
    public void setUp() throws Exception {
        super.setUp();
    }

    @After
    public void tearDown() throws Exception {
        super.tearDown();
    }


    /**
     * Perform the test for the given matrix column (T07L01) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testT07L01_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E01P03M01C02", "1");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testT07L01_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E02P03M01C02", "2");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testT07L01_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E03P03M01C02", "3");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testT07L01_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E04P03M01C02", "4");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testT07L01_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E05P03M01C02", "5");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testT07L01_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E01P01M02C02", "6");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testT07L01_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E02P01M02C02", "7");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testT07L01_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E03P01M02C02", "8");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testT07L01_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E04P01M02C02", "9");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testT07L01_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E05P01M02C02", "10");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testT07L01_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E01P02M02C02", "11");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testT07L01_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E02P02M02C02", "12");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testT07L01_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E03P02M02C02", "13");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testT07L01_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E04P02M02C02", "14");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testT07L01_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E05P02M02C02", "15");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testT07L01_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E01P03M02C02", "16");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testT07L01_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E02P03M02C02", "17");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testT07L01_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E03P03M02C02", "18");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testT07L01_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E04P03M02C02", "19");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L01) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testT07L01_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L01", "E05P03M02C02", "20");

        NonRootModelElement src = selectTL("T07L01");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testT07L02_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P01M01C01", "21");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testT07L02_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P01M01C01", "22");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testT07L02_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P01M01C01", "23");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testT07L02_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P01M01C01", "24");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testT07L02_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P01M01C01", "25");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testT07L02_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P02M01C01", "26");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testT07L02_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P02M01C01", "27");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testT07L02_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P02M01C01", "28");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testT07L02_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P02M01C01", "29");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testT07L02_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P02M01C01", "30");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testT07L02_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P03M01C01", "31");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testT07L02_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P03M01C01", "32");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testT07L02_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P03M01C01", "33");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testT07L02_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P03M01C01", "34");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testT07L02_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P03M01C01", "35");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testT07L02_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P01M02C01", "36");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testT07L02_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P01M02C01", "37");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testT07L02_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P01M02C01", "38");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testT07L02_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P01M02C01", "39");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testT07L02_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P01M02C01", "40");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testT07L02_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P02M02C01", "41");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testT07L02_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P02M02C01", "42");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testT07L02_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P02M02C01", "43");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testT07L02_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P02M02C01", "44");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testT07L02_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P02M02C01", "45");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testT07L02_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P03M02C01", "46");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testT07L02_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P03M02C01", "47");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testT07L02_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P03M02C01", "48");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testT07L02_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P03M02C01", "49");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testT07L02_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P03M02C01", "50");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testT07L02_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P01M01C02", "51");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testT07L02_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P01M01C02", "52");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testT07L02_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P01M01C02", "53");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testT07L02_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P01M01C02", "54");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testT07L02_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P01M01C02", "55");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testT07L02_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P02M01C02", "56");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testT07L02_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P02M01C02", "57");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testT07L02_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P02M01C02", "58");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testT07L02_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P02M01C02", "59");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testT07L02_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P02M01C02", "60");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testT07L02_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P03M01C02", "61");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testT07L02_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P03M01C02", "62");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testT07L02_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P03M01C02", "63");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testT07L02_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P03M01C02", "64");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testT07L02_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P03M01C02", "65");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testT07L02_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P01M02C02", "66");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testT07L02_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P01M02C02", "67");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testT07L02_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P01M02C02", "68");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testT07L02_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P01M02C02", "69");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testT07L02_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P01M02C02", "70");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testT07L02_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P02M02C02", "71");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testT07L02_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P02M02C02", "72");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testT07L02_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P02M02C02", "73");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testT07L02_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P02M02C02", "74");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testT07L02_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P02M02C02", "75");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testT07L02_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E01P03M02C02", "76");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testT07L02_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E02P03M02C02", "77");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testT07L02_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E03P03M02C02", "78");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testT07L02_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E04P03M02C02", "79");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L02) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testT07L02_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L02", "E05P03M02C02", "80");

        NonRootModelElement src = selectTL("T07L02");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testT07L03_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P01M01C01", "81");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testT07L03_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P01M01C01", "82");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testT07L03_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P01M01C01", "83");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testT07L03_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P01M01C01", "84");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testT07L03_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P01M01C01", "85");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testT07L03_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P02M01C01", "86");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testT07L03_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P02M01C01", "87");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testT07L03_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P02M01C01", "88");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testT07L03_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P02M01C01", "89");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testT07L03_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P02M01C01", "90");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testT07L03_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P03M01C01", "91");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testT07L03_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P03M01C01", "92");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testT07L03_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P03M01C01", "93");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testT07L03_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P03M01C01", "94");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testT07L03_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P03M01C01", "95");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testT07L03_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P01M02C01", "96");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testT07L03_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P01M02C01", "97");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testT07L03_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P01M02C01", "98");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testT07L03_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P01M02C01", "99");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testT07L03_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P01M02C01", "100");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testT07L03_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P02M02C01", "101");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testT07L03_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P02M02C01", "102");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testT07L03_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P02M02C01", "103");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testT07L03_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P02M02C01", "104");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testT07L03_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P02M02C01", "105");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testT07L03_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P03M02C01", "106");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testT07L03_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P03M02C01", "107");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testT07L03_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P03M02C01", "108");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testT07L03_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P03M02C01", "109");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testT07L03_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P03M02C01", "110");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testT07L03_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P01M01C02", "111");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testT07L03_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P01M01C02", "112");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testT07L03_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P01M01C02", "113");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testT07L03_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P01M01C02", "114");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testT07L03_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P01M01C02", "115");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testT07L03_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P02M01C02", "116");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testT07L03_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P02M01C02", "117");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testT07L03_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P02M01C02", "118");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testT07L03_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P02M01C02", "119");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testT07L03_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P02M01C02", "120");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testT07L03_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P03M01C02", "121");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testT07L03_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P03M01C02", "122");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testT07L03_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P03M01C02", "123");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testT07L03_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P03M01C02", "124");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testT07L03_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P03M01C02", "125");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testT07L03_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P01M02C02", "126");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testT07L03_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P01M02C02", "127");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testT07L03_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P01M02C02", "128");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testT07L03_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P01M02C02", "129");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testT07L03_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P01M02C02", "130");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testT07L03_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P02M02C02", "131");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testT07L03_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P02M02C02", "132");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testT07L03_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P02M02C02", "133");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testT07L03_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P02M02C02", "134");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testT07L03_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P02M02C02", "135");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testT07L03_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E01P03M02C02", "136");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testT07L03_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E02P03M02C02", "137");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testT07L03_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E03P03M02C02", "138");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testT07L03_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E04P03M02C02", "139");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L03) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testT07L03_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L03", "E05P03M02C02", "140");

        NonRootModelElement src = selectTL("T07L03");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testT07L04_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P01M01C01", "141");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testT07L04_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P01M01C01", "142");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testT07L04_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P01M01C01", "143");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testT07L04_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P01M01C01", "144");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testT07L04_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P01M01C01", "145");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testT07L04_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P02M01C01", "146");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testT07L04_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P02M01C01", "147");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testT07L04_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P02M01C01", "148");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testT07L04_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P02M01C01", "149");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testT07L04_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P02M01C01", "150");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testT07L04_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P03M01C01", "151");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testT07L04_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P03M01C01", "152");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testT07L04_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P03M01C01", "153");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testT07L04_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P03M01C01", "154");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testT07L04_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P03M01C01", "155");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testT07L04_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P01M02C01", "156");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testT07L04_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P01M02C01", "157");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testT07L04_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P01M02C01", "158");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testT07L04_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P01M02C01", "159");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testT07L04_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P01M02C01", "160");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testT07L04_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P02M02C01", "161");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testT07L04_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P02M02C01", "162");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testT07L04_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P02M02C01", "163");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testT07L04_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P02M02C01", "164");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testT07L04_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P02M02C01", "165");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testT07L04_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P03M02C01", "166");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testT07L04_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P03M02C01", "167");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testT07L04_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P03M02C01", "168");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testT07L04_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P03M02C01", "169");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testT07L04_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P03M02C01", "170");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testT07L04_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P01M01C02", "171");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testT07L04_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P01M01C02", "172");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testT07L04_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P01M01C02", "173");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testT07L04_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P01M01C02", "174");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testT07L04_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P01M01C02", "175");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testT07L04_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P02M01C02", "176");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testT07L04_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P02M01C02", "177");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testT07L04_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P02M01C02", "178");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testT07L04_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P02M01C02", "179");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testT07L04_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P02M01C02", "180");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testT07L04_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P03M01C02", "181");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testT07L04_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P03M01C02", "182");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testT07L04_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P03M01C02", "183");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testT07L04_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P03M01C02", "184");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testT07L04_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P03M01C02", "185");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testT07L04_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P01M02C02", "186");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testT07L04_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P01M02C02", "187");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testT07L04_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P01M02C02", "188");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testT07L04_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P01M02C02", "189");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testT07L04_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P01M02C02", "190");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P02M02C02).
     * 
     */
    @Test
    public void testT07L04_E01P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P02M02C02", "191");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P02M02C02).
     * 
     */
    @Test
    public void testT07L04_E02P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P02M02C02", "192");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P02M02C02).
     * 
     */
    @Test
    public void testT07L04_E03P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P02M02C02", "193");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P02M02C02).
     * 
     */
    @Test
    public void testT07L04_E04P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P02M02C02", "194");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P02M02C02).
     * 
     */
    @Test
    public void testT07L04_E05P02M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P02M02C02", "195");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P02M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E01P03M02C02).
     * 
     */
    @Test
    public void testT07L04_E01P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E01P03M02C02", "196");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E01P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E02P03M02C02).
     * 
     */
    @Test
    public void testT07L04_E02P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E02P03M02C02", "197");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E02P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E03P03M02C02).
     * 
     */
    @Test
    public void testT07L04_E03P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E03P03M02C02", "198");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E03P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E04P03M02C02).
     * 
     */
    @Test
    public void testT07L04_E04P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E04P03M02C02", "199");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E04P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L04) and row (E05P03M02C02).
     * 
     */
    @Test
    public void testT07L04_E05P03M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L04", "E05P03M02C02", "200");

        NonRootModelElement src = selectTL("T07L04");

        NonRootModelElement dest = selectEPMC("E05P03M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P01M01C01).
     * 
     */
    @Test
    public void testT07L05_E01P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P01M01C01", "201");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P01M01C01).
     * 
     */
    @Test
    public void testT07L05_E02P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P01M01C01", "202");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P01M01C01).
     * 
     */
    @Test
    public void testT07L05_E03P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P01M01C01", "203");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P01M01C01).
     * 
     */
    @Test
    public void testT07L05_E04P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P01M01C01", "204");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P01M01C01).
     * 
     */
    @Test
    public void testT07L05_E05P01M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P01M01C01", "205");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P01M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P02M01C01).
     * 
     */
    @Test
    public void testT07L05_E01P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P02M01C01", "206");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P02M01C01).
     * 
     */
    @Test
    public void testT07L05_E02P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P02M01C01", "207");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P02M01C01).
     * 
     */
    @Test
    public void testT07L05_E03P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P02M01C01", "208");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P02M01C01).
     * 
     */
    @Test
    public void testT07L05_E04P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P02M01C01", "209");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P02M01C01).
     * 
     */
    @Test
    public void testT07L05_E05P02M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P02M01C01", "210");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P02M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P03M01C01).
     * 
     */
    @Test
    public void testT07L05_E01P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P03M01C01", "211");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P03M01C01).
     * 
     */
    @Test
    public void testT07L05_E02P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P03M01C01", "212");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P03M01C01).
     * 
     */
    @Test
    public void testT07L05_E03P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P03M01C01", "213");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P03M01C01).
     * 
     */
    @Test
    public void testT07L05_E04P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P03M01C01", "214");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P03M01C01).
     * 
     */
    @Test
    public void testT07L05_E05P03M01C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P03M01C01", "215");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P03M01C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P01M02C01).
     * 
     */
    @Test
    public void testT07L05_E01P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P01M02C01", "216");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P01M02C01).
     * 
     */
    @Test
    public void testT07L05_E02P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P01M02C01", "217");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P01M02C01).
     * 
     */
    @Test
    public void testT07L05_E03P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P01M02C01", "218");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P01M02C01).
     * 
     */
    @Test
    public void testT07L05_E04P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P01M02C01", "219");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P01M02C01).
     * 
     */
    @Test
    public void testT07L05_E05P01M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P01M02C01", "220");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P01M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P02M02C01).
     * 
     */
    @Test
    public void testT07L05_E01P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P02M02C01", "221");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P02M02C01).
     * 
     */
    @Test
    public void testT07L05_E02P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P02M02C01", "222");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P02M02C01).
     * 
     */
    @Test
    public void testT07L05_E03P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P02M02C01", "223");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P02M02C01).
     * 
     */
    @Test
    public void testT07L05_E04P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P02M02C01", "224");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P02M02C01).
     * 
     */
    @Test
    public void testT07L05_E05P02M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P02M02C01", "225");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P02M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P03M02C01).
     * 
     */
    @Test
    public void testT07L05_E01P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P03M02C01", "226");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P03M02C01).
     * 
     */
    @Test
    public void testT07L05_E02P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P03M02C01", "227");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P03M02C01).
     * 
     */
    @Test
    public void testT07L05_E03P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P03M02C01", "228");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P03M02C01).
     * 
     */
    @Test
    public void testT07L05_E04P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P03M02C01", "229");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P03M02C01).
     * 
     */
    @Test
    public void testT07L05_E05P03M02C01() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P03M02C01", "230");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P03M02C01");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P01M01C02).
     * 
     */
    @Test
    public void testT07L05_E01P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P01M01C02", "231");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P01M01C02).
     * 
     */
    @Test
    public void testT07L05_E02P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P01M01C02", "232");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P01M01C02).
     * 
     */
    @Test
    public void testT07L05_E03P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P01M01C02", "233");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P01M01C02).
     * 
     */
    @Test
    public void testT07L05_E04P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P01M01C02", "234");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P01M01C02).
     * 
     */
    @Test
    public void testT07L05_E05P01M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P01M01C02", "235");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P01M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P02M01C02).
     * 
     */
    @Test
    public void testT07L05_E01P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P02M01C02", "236");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P02M01C02).
     * 
     */
    @Test
    public void testT07L05_E02P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P02M01C02", "237");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P02M01C02).
     * 
     */
    @Test
    public void testT07L05_E03P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P02M01C02", "238");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P02M01C02).
     * 
     */
    @Test
    public void testT07L05_E04P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P02M01C02", "239");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P02M01C02).
     * 
     */
    @Test
    public void testT07L05_E05P02M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P02M01C02", "240");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P02M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P03M01C02).
     * 
     */
    @Test
    public void testT07L05_E01P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P03M01C02", "241");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P03M01C02).
     * 
     */
    @Test
    public void testT07L05_E02P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P03M01C02", "242");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P03M01C02).
     * 
     */
    @Test
    public void testT07L05_E03P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P03M01C02", "243");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P03M01C02).
     * 
     */
    @Test
    public void testT07L05_E04P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P03M01C02", "244");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P03M01C02).
     * 
     */
    @Test
    public void testT07L05_E05P03M01C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P03M01C02", "245");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P03M01C02");

        TL_EPMC_Action(src, dest);
        assertTrue("The selection made based on cursor position is not valid", checkResult_invalidSelection(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E01P01M02C02).
     * 
     */
    @Test
    public void testT07L05_E01P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E01P01M02C02", "246");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E01P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E02P01M02C02).
     * 
     */
    @Test
    public void testT07L05_E02P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E02P01M02C02", "247");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E02P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E03P01M02C02).
     * 
     */
    @Test
    public void testT07L05_E03P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E03P01M02C02", "248");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E03P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E04P01M02C02).
     * 
     */
    @Test
    public void testT07L05_E04P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E04P01M02C02", "249");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E04P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

    /**
     * Perform the test for the given matrix column (T07L05) and row (E05P01M02C02).
     * 
     */
    @Test
    public void testT07L05_E05P01M02C02() throws Exception {
        setUp();
        test_id = getTestId("T07L05", "E05P01M02C02", "250");

        NonRootModelElement src = selectTL("T07L05");

        NonRootModelElement dest = selectEPMC("E05P01M02C02");

        TL_EPMC_Action(src, dest);
        assertTrue("Declaration was shown in model explorer, and canvas.", checkResult_elementShownInMEandCanvas(src,dest));
        
        GraphicalEditor editor = getActiveEditor();
        if(editor != null && useDrawResults) {
           validateOrGenerateResults(editor, generateResults);
        }
        tearDown();
    }

}
